import React, { useState, useEffect, useMemo } from 'react';
import { motion } from 'framer-motion';
import { Link } from 'react-router-dom';

// Import shared components
import RoleSelector from '../components/RoleSelector';
import Logo from '../../../assets/images/logo.svg';
import HeaderTabs from '../components/HeaderTabs';

// TypeScript interface for component props
interface HeroSectionProps {
  // Optional props can be added here
}

/**
 * Hero section component with role selector and animated elements
 * This is a consolidated version of the original HeroSection and EnhancedHeroSection
 */
const HeroSection: React.FC<HeroSectionProps> = () => {
  // State for role selection
  const [selectedRole, setSelectedRole] = useState<'Landlord' | 'Tenant' | 'Contractor'>('Landlord');
  
  // Memoized role content to avoid recalculation
  const roleContent = useMemo(() => ({
    Landlord: {
      headline: "Cut maintenance response times by 65%",
      description: "Connect with verified contractors instantly, track maintenance in real-time, and keep your properties running smoothly with AI-powered workflows.",
      ctaText: "Start Managing Properties",
      image: "landlord-dashboard.png"
    },
    Contractor: {
      headline: "Get matched with more jobs â€” instantly",
      description: "Receive job requests that match your skills and availability. No more wasted time on phone calls or driving to unprofitable jobs.",
      ctaText: "Join Our Contractor Network",
      image: "contractor-dashboard.png"
    },
    Tenant: {
      headline: "Submit & track issues in real time",
      description: "Report maintenance issues in seconds and watch as they get resolved. No more waiting for callbacks or unclear timelines.",
      ctaText: "Simplify Maintenance Requests",
      image: "tenant-dashboard.png"
    }
  }), []);

  // For scroll indicator animation
  const [isScrollVisible, setIsScrollVisible] = useState(true);
  
  useEffect(() => {
    const handleScroll = () => {
      setIsScrollVisible(window.scrollY <= 100);
    };
    
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);
  
  // Save role preference to localStorage
  useEffect(() => {
    localStorage.setItem('preferredRole', selectedRole);
  }, [selectedRole]);
  
  // Load preferred role from localStorage on initial load
  useEffect(() => {
    const savedRole = localStorage.getItem('preferredRole');
    if (savedRole && ['Landlord', 'Contractor', 'Tenant'].includes(savedRole)) {
      setSelectedRole(savedRole as 'Landlord' | 'Tenant' | 'Contractor');
    }
  }, []);

  // Animation variants
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: { 
      opacity: 1,
      transition: { 
        when: "beforeChildren",
        staggerChildren: 0.2,
        duration: 0.5
      }
    }
  };
  
  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: { 
      y: 0, 
      opacity: 1,
      transition: { type: 'spring', stiffness: 300, damping: 24 }
    }
  };

  // Particles for background animation
  const particles = useMemo(() => {
    const numParticles = 15;
    return [...Array(numParticles)].map((_, i) => ({
      id: i,
      style: {
        top: `${Math.random() * 100}%`,
        left: `${Math.random() * 100}%`,
        width: `${Math.random() * 15 + 5}px`,
        height: `${Math.random() * 15 + 5}px`,
      },
      animate: {
        y: [0, Math.random() * 30 - 15],
        x: [0, Math.random() * 30 - 15],
        scale: [1, Math.random() * 0.5 + 0.7, 1],
      },
      transition: {
        duration: Math.random() * 6 + 6,
        repeat: Infinity,
        repeatType: 'reverse',
        ease: "easeInOut"
      }
    }));
  }, []);

  return (
    <div className="relative overflow-hidden">
      {/* Background with particles */}
      <div className="absolute inset-0 bg-gradient-to-b from-primary-dark via-primary to-primary-light dark:from-neutral-900 dark:to-neutral-800 overflow-hidden">
        <div className="absolute inset-0 overflow-hidden opacity-15">
          {particles.map((particle) => (
            <motion.div
              key={particle.id}
              className="absolute rounded-full bg-primary-light dark:bg-primary/50"
              style={particle.style}
              initial={false}
              animate={particle.animate}
              transition={particle.transition}
            />
          ))}
        </div>
      </div>
      
      {/* Header Navigation */}
      <HeaderTabs />
      
      {/* Hero Content */}
      <div className="container mx-auto px-6 py-16 md:py-24 relative z-10">
        <motion.div
          className="flex flex-col md:flex-row items-center"
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          <div className="md:w-1/2 md:pr-12">
            {/* Role Selector Tabs */}
            <motion.div variants={itemVariants} className="mb-8">
              <div className="mb-2 text-sm text-white opacity-80">
                I am a:
              </div>
              <RoleSelector 
                roles={['Landlord', 'Contractor', 'Tenant']}
                selectedRole={selectedRole}
                onSelectRole={setSelectedRole}
              />
            </motion.div>
            
            <motion.h1 
              variants={itemVariants}
              className="text-4xl md:text-5xl lg:text-6xl font-bold text-white leading-tight"
            >
              {roleContent[selectedRole].headline}
            </motion.h1>
            
            <motion.p 
              variants={itemVariants}
              className="mt-6 text-xl text-white text-opacity-90"
            >
              {roleContent[selectedRole].description}
            </motion.p>
            
            <motion.div 
              variants={itemVariants}
              className="mt-8 flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4"
            >
              <Link 
                to={`/auth?tab=signup&role=${selectedRole.toLowerCase()}`} 
                className="bg-white text-primary px-8 py-3 rounded-lg font-medium hover:bg-gray-100 transform hover:-translate-y-0.5 transition duration-150 text-center"
              >
                {roleContent[selectedRole].ctaText}
              </Link>
              <Link 
                to="/how-it-works" 
                className="border border-white text-white px-8 py-3 rounded-lg font-medium hover:bg-white hover:text-primary hover:bg-opacity-20 transform hover:-translate-y-0.5 transition duration-150 text-center"
              >
                See How It Works
              </Link>
            </motion.div>
          </div>
          
          {/* Dashboard Preview based on role */}
          <motion.div
            variants={itemVariants} 
            className="md:w-1/2 mt-12 md:mt-0 relative"
          >
            <div className="rounded-xl shadow-2xl overflow-hidden bg-white dark:bg-neutral-800">
              {selectedRole === 'Landlord' && (
                <img 
                  src={`/dashboards/${roleContent[selectedRole].image}`}
                  alt="Landlord Dashboard Preview" 
                  className="w-full h-auto"
                />
              )}
              {selectedRole === 'Contractor' && (
                <img 
                  src={`/dashboards/${roleContent[selectedRole].image}`}
                  alt="Contractor Dashboard Preview"
                  className="w-full h-auto"
                />
              )}
              {selectedRole === 'Tenant' && (
                <img 
                  src={`/dashboards/${roleContent[selectedRole].image}`}
                  alt="Tenant Dashboard Preview"
                  className="w-full h-auto"
                />
              )}
            </div>
            
            {/* Testimonial Quote */}
            <motion.div
              variants={itemVariants}
              className="mt-6 bg-white dark:bg-neutral-800 p-6 rounded-lg shadow-lg border border-gray-100 dark:border-neutral-700"
            >
              <p className="italic text-gray-700 dark:text-gray-300 mb-4">
                "We solved more issues in 2 weeks with Propagentic than all of last quarter."
              </p>
              <div className="flex items-center">
                <div className="h-10 w-10 rounded-full bg-gray-300 mr-3"></div>
                <div>
                  <p className="font-semibold text-gray-900 dark:text-white">Rachel T.</p>
                  <p className="text-sm text-gray-600 dark:text-gray-400">Regional Property Manager</p>
                </div>
              </div>
            </motion.div>
          </motion.div>
        </motion.div>
        
        {/* Scroll Indicator */}
        {isScrollVisible && (
          <motion.div 
            className="absolute bottom-8 left-1/2 transform -translate-x-1/2"
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 1, duration: 0.5 }}
          >
            <motion.div
              className="w-6 h-10 border-2 border-white rounded-full flex items-center justify-center"
              animate={{ y: [0, 10, 0] }}
              transition={{ repeat: Infinity, duration: 1.5 }}
            >
              <div className="w-1.5 h-1.5 bg-white rounded-full"></div>
            </motion.div>
            <p className="text-white text-xs mt-2 text-center">Scroll to explore</p>
          </motion.div>
        )}
      </div>
      
      {/* Security Badges */}
      <div className="container mx-auto px-6 py-8 flex flex-wrap justify-center gap-6 relative z-10">
        <div className="flex items-center space-x-2 text-sm text-white">
          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-primary-light" viewBox="0 0 20 20" fill="currentColor">
            <path fillRule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
          </svg>
          <span>GDPR-Compliant</span>
        </div>
        <div className="flex items-center space-x-2 text-sm text-white">
          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-primary-light" viewBox="0 0 20 20" fill="currentColor">
            <path fillRule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
          </svg>
          <span>SOC2-Ready</span>
        </div>
        <div className="flex items-center space-x-2 text-sm text-white">
          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-primary-light" viewBox="0 0 20 20" fill="currentColor">
            <path fillRule="evenodd" d="M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
          </svg>
          <span>Firebase Secured</span>
        </div>
      </div>
      
      {/* Wave divider */}
      <div className="absolute bottom-0 left-0 right-0">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320" className="w-full">
          <path fill="currentColor" fillOpacity="1" className="text-background dark:text-background-dark"
                d="M0,96L80,106.7C160,117,320,139,480,154.7C640,171,800,181,960,165.3C1120,149,1280,107,1360,85.3L1440,64L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z"></path>
        </svg>
      </div>
    </div>
  );
};

export default HeroSection; 